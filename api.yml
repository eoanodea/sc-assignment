openapi: 3.0.0
info:
  version: 0.1.0
  title: Forum API
  description: Implements JSend specification
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    role:
      type: string
      example: admin
      enum:
        - admin
        - moderator
        - author
        - reader
    user:
      type: object
      properties:
        userId:
          type: string
          example: c35522906a
        displayname:
          type: string
          example: Mr. Foo
        role:
          $ref: '#/components/schemas/role'
    thread:
      type: object
      properties:
        threadId:
          type: string
          example: 104ab42f11
        title:
          type: string
          example: Forum etiquette
    message:
      type: object
      properties:
        messageId:
          type: string
          example: 5284267ade
        timestamp:
          type: integer
          example: 1642532293
        author:
          $ref: '#/components/schemas/user'
        text:
          type: string
          description: 'Null if deleted is true'
          example: Hello forum!
        deleted:
          type: boolean
          description: 'True if text is null'
          example: false
paths:
  /threads:
    get:
      tags:
        - Content
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/thread'
    post:
      tags:
        - Content
      summary: New thread
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Forum etiquette
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/thread'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: You may not create threads
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                        example: A thread with this title already exists
      security:
        - bearerAuth: []
  '/threads/{threadId}':
    parameters:
      - in: path
        name: threadId
        schema:
          type: string
        example: 104ab42f11
        required: true
    get:
      tags:
        - Content
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          example: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      messages:
                        type: array
                        items:
                          $ref: '#/components/schemas/message'
                      previousPage:
                        type: integer
                        example: 1
                      nextPage:
                        type: integer
                        example: null
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  data:
                    type: object
                    properties:
                      threadId:
                        type: string
                        example: No such thread
    post:
      tags:
        - Content
      summary: New message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Hello forum!
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    example: null
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: You may not post messages here
      security:
        - bearerAuth: []
  '/threads/{threadId}/{messageId}':
    parameters:
      - in: path
        name: threadId
        schema:
          type: string
        example: 104ab42f11
        required: true
      - in: path
        name: messageId
        schema:
          type: string
        example: 5284267ade
        required: true
    delete:
      tags:
        - Content
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    example: null
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  data:
                    type: object
                    properties:
                      messageId:
                        type: string
                        example: You may not delete this message
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  data:
                    type: object
                    properties:
                      messageId:
                        type: string
                        example: No such message
      security:
        - bearerAuth: []
  /users:
    get:
      tags:
        - Users
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          example: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/user'
                      previousPage:
                        type: integer
                        example: 1
                      nextPage:
                        type: integer
                        example: null
    post:
      tags:
        - Users
      summary: Register
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    example: null
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: Already registered
      security:
        - bearerAuth: []
  '/users/{userId}':
    parameters:
      - in: path
        name: userId
        schema:
          type: string
        example: c35522906a
        required: true
    put:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  $ref: '#/components/schemas/role'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    example: null
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  data:
                    type: object
                    properties:
                      role:
                        type: string
                        example: You may not change the role of this user
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: No such user
      security:
        - bearerAuth: []
